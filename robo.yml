variables:
  work_dir: ~/workspaces/Go/src/github.com/yyh-gl/hobigon-golang-api-server
  git:
    commit: $(git rev-parse HEAD)
    branch: $(git rev-parse --abbrev-ref HEAD)

api-build-local:
  summary: APIサーバをローカルかつLinux用にビルド
  command: GO111MODULE=on GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-X main.COMMIT={{.git.commit}} -X main.BRANCH={{.git.branch}}" -o ./docker/api/bin/api-server ./cmd/api/main.go

api-build-prod:
  summary: APIサーバをProductionかつLinux用にビルド
  command: GO111MODULE=on GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-X main.COMMIT={{.git.commit}} -X main.BRANCH={{.git.branch}}" -o ./cmd/api/bin/api-server ./cmd/api/main.go

cli-build-local:
  summary: CLIをローカルかつLinux用にビルド
  command: GO111MODULE=on GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-X main.COMMIT={{.git.commit}} -X main.BRANCH={{.git.branch}}" -o ./docker/cli/bin/hobi ./cmd/cli/main.go

cli-build-prod:
  summary: CLIをProductionかつLinux用にビルド
  command: GO111MODULE=on GOOS=linux GOARCH=amd64 CGO_ENABLED=0 go build -ldflags "-X main.COMMIT={{.git.commit}} -X main.BRANCH={{.git.branch}}" -o ./cmd/cli/bin/hobi ./cmd/cli/main.go

all-build-local:
  summary: APIサーバおよびCLIをローカルかつLinux用にビルド
  command: |
    robo api-build-local
    robo cli-build-local

all-build-prod:
  summary: APIサーバおよびCLIをProductionかつLinux用にビルド
  command: |
    robo api-build-prod
    robo cli-build-prod

deploy:
  summary: ProductionかつLinux用にビルドしてからデプロイ（masterにPUSH）
  command: |
    robo all-build-prod
    git add ./cmd/api/bin/api-server ./cmd/cli/bin/hobi
    git commit -m "[`date +'%Y/%m/%d %H:%M:%S'`] 最新版デプロイ"
    git push origin master

lint:
  summary: Docker経由でLint実行
  command: docker-compose exec -T api golangci-lint run --tests --disable-all --enable=goimports --enable=golint --enable=govet --enable=errcheck ./...

get-access-ranking:
  summary: アクセスランキング取得
  command: echo "robo タスク未対応（現在、実装中🚧）"
