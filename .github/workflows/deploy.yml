name: Deploy

on:
  push:

jobs:
  test_and_lint:
    name: Test and Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Test
        env:
          APP_ENV: test
        run: go test -v ./...

      - name: Lint
        uses: golangci/golangci-lint-action@v2
        with:
          version: v1.33
          args: --timeout 5m0s

      - name: Slack success notification
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_50 }}
          SLACK_USERNAME: Mario
          SLACK_ICON_EMOJI: ":mario:"
          SLACK_TITLE: Test Success

      - name: Slack failure notification
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_50 }}
          SLACK_USERNAME: Mario
          SLACK_ICON_EMOJI: ":mario:"
          SLACK_COLOR: danger
          SLACK_TITLE: Test Failure

  deploy:
    name: Deploy
    runs-on: ubuntu-latest
    needs: test_and_lint
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Build
        run: make build-all env=prd
      - name: Deploy
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          source: 'cmd/rest/bin/api-server,cmd/cli/bin/hobi,cmd/graphql/bin/graphql-server'
          target: "api-server-golang"
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
      - name: Make release note
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Slack deploy success notification
        if: ${{ success() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_50 }}
          SLACK_USERNAME: Mario
          SLACK_ICON_EMOJI: ':mario:'
          SLACK_TITLE: Deploy Success
      - name: Slack deploy failure notification
        if: ${{ failure() }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_50 }}
          SLACK_USERNAME: Mario
          SLACK_ICON_EMOJI: ':mario:'
          SLACK_COLOR: danger
          SLACK_TITLE: Deploy Failure
