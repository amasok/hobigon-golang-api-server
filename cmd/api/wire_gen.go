// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package main

import (
	"github.com/yyh-gl/hobigon-golang-api-server/handler/rest"
	"github.com/yyh-gl/hobigon-golang-api-server/infra/igateway"
	"github.com/yyh-gl/hobigon-golang-api-server/infra/irepository"
	"github.com/yyh-gl/hobigon-golang-api-server/infra/iservice"
	"github.com/yyh-gl/hobigon-golang-api-server/usecase"
)

// Injectors from wire.go:

func initBlogHandler() rest.BlogHandler {
	blogRepository := irepository.NewBlogRepository()
	slackGateway := igateway.NewSlackGateway()
	blogUseCase := usecase.NewBlogUseCase(blogRepository, slackGateway)
	blogHandler := rest.NewBlogHandler(blogUseCase)
	return blogHandler
}

func initBirthdayHandler() rest.BirthdayHandler {
	birthdayRepository := irepository.NewBirthdayRepository()
	birthdayUseCase := usecase.NewBirthdayUseCase(birthdayRepository)
	birthdayHandler := rest.NewBirthdayHandler(birthdayUseCase)
	return birthdayHandler
}

func initNotificationHandler() rest.NotificationHandler {
	taskGateway := igateway.NewTaskGateway()
	slackGateway := igateway.NewSlackGateway()
	birthdayRepository := irepository.NewBirthdayRepository()
	notificationService := iservice.NewNotificationService(slackGateway)
	rankingService := iservice.NewRankingService()
	notificationUseCase := usecase.NewNotificationUseCase(taskGateway, slackGateway, birthdayRepository, notificationService, rankingService)
	notificationHandler := rest.NewNotificationHandler(notificationUseCase)
	return notificationHandler
}
